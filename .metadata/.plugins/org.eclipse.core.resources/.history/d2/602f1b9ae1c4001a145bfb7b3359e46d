package database;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import User.Professor;

public class DB_USER extends DBManager {
	
	public synchronized static List<Professor> getAllPro() {
		Connection conn = null;
		Statement state = null;
		ResultSet rs =null;
		List<Professor> userList = new ArrayList<>();
		String [] MemberInfo = new String[3];
		try {

			conn = getConn();
			state = conn.createStatement();

			String sql;
			sql = "SELECT *FROM user";
			
			rs = state.executeQuery(sql);

			
			while (rs.next()) {
				MemberInfo[0] = rs.getString("ID");
				MemberInfo[1] = rs.getString("PassWord");
				MemberInfo[2] = rs.getString("Email");
				userList.add(new Professor(MemberInfo));
			}
			return userList;

			
		} catch (Exception e) {
			System.out.println(e);
			return null;
		} finally {	
			
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException sqle1) {
				sqle1.printStackTrace();
			}
			try {if(rs!=null)
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
	}


	public synchronized static Professor getUser(String ID) {
	
		Connection conn = null;
		Statement state = null;
		ResultSet rs =null;
		String[] userInfo = new String[8];
		
		try {
			conn = getConn();

			state = conn.createStatement();// conn���������� state�� ����.
			
			String sql;
			sql = "SELECT * FROM user WHERE id='" + ID + "'";
			
			rs = state.executeQuery(sql);
			if(rs==null) {
				return null;//���� X
			}

			if (rs.next()) {
				userInfo[0] = rs.getString("id");
				userInfo[1] = rs.getString("password");
				userInfo[2] = rs.getString("name");
				userInfo[3] = rs.getString("Phone");
				userInfo[4] = rs.getString("Email");
				userInfo[5] = rs.getString("Address");
				userInfo[6] = rs.getString("Lend_OK");
				userInfo[7]=rs.getString("is_connected");//����Ǹ� 1, �ƴϸ� 0
				// RentalBookRegistrationNum
			}
			User returnUser=new User(userInfo);
			return returnUser;

			
		
		} catch (Exception e) {
			return null;
		} finally {	
			try {
				if (state != null)
					state.close();
			} catch (SQLException sqle) {
			}
			try {
				if (conn != null)
					conn.close();
			} catch (SQLException sqle1) {
				sqle1.printStackTrace();
			}
			try {if(rs!=null)
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
	}



	
	public synchronized static void modifyUser(User changeUser) {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = getConn();

			String sql;
			sql = "update user set PassWord=?, Name=?, Phone=?, Email=?, Address=? where id=?";
			pstmt = conn.prepareStatement(sql);

			
			pstmt.setString(1, changeUser.getPassword());
			pstmt.setString(2, changeUser.getName());
			pstmt.setString(3, changeUser.getPhone());
			pstmt.setString(4, changeUser.getEmail());
			pstmt.setString(5,  changeUser.getAddress()+ "");
			
			pstmt.setString(6, changeUser.getID());
			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {if (conn != null)conn.close();
				if (pstmt != null)pstmt.close();
			} 
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	
	
	public synchronized static void userLogIn(String id) {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {

			conn = getConn();

			String sql;
			sql = "UPDATE user SET is_connected = '1' WHERE id= '"+id+"'";
			pstmt = conn.prepareStatement(sql);

			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {if (conn != null)conn.close();
				if (pstmt != null)pstmt.close();
			} 
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	public synchronized static void userLogOut(String id) {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {

			conn = getConn();

			String sql;
			sql = "UPDATE user SET is_connected='0' WHERE id='"+id+"'";
			pstmt = conn.prepareStatement(sql);

			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {if (conn != null)conn.close();
				if (pstmt != null)pstmt.close();
			} 
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	public synchronized static void allUserLogOut() {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {

			conn = getConn();

			String sql;
			sql = "UPDATE user SET is_connected='0'" ;
			pstmt = conn.prepareStatement(sql);

			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {if (conn != null)conn.close();
				if (pstmt != null)pstmt.close();
			} 
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	
	public synchronized static void insertUser(String ID, String PassWord, String Name, String Phone ,String Email, String Address, int Lend_OK,int is_connected) throws SQLException {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {

			conn = getConn();

			String sql;
			sql = "INSERT INTO user (ID, PassWord, Name, Phone, Email, Address, Lend_OK, is_connected)VALUES (?,?,?,?,?,?,?,?)";
			pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, ID);
			pstmt.setString(2, PassWord);
			pstmt.setString(3, Name);
			pstmt.setString(4, Phone);
			pstmt.setString(5, Email);
			pstmt.setString(6,  Address);
			pstmt.setString(7,  Lend_OK+ "");
			pstmt.setString(8,  is_connected+ "");
			

			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		}finally {
			try {if (conn != null)conn.close();
				if (pstmt != null)pstmt.close();
			} 
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}
	

	public synchronized static void deleateUser(String ID) {
		Connection conn = null;
		PreparedStatement pstmt = null;

		try {

			conn = getConn();

			String sql;
			sql = "DELETE FROM user WHERE ID=?";
			pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, ID);
			pstmt.execute();

			pstmt.close();
			conn.close();

		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {if (conn != null)conn.close();
			if (pstmt != null)pstmt.close();
		} 
		catch (SQLException e) {
			e.printStackTrace();
		}
	}
	}

}
